    1: from ..utils import cached_property
    1: from .auth import WWWAuthenticateMixin
    1: from .base_response import BaseResponse
    1: from .common_descriptors import CommonResponseDescriptorsMixin
    1: from .cors import CORSResponseMixin
    1: from .etag import ETagResponseMixin
       
       
    2: class ResponseStream(object):
           """A file descriptor like object used by the :class:`ResponseStreamMixin` to
           represent the body of the stream.  It directly pushes into the response
           iterable of the response object.
    1:     """
       
    1:     mode = "wb+"
       
    1:     def __init__(self, response):
               self.response = response
               self.closed = False
       
    1:     def write(self, value):
               if self.closed:
                   raise ValueError("I/O operation on closed file")
               self.response._ensure_sequence(mutable=True)
               self.response.response.append(value)
               self.response.headers.pop("Content-Length", None)
               return len(value)
       
    1:     def writelines(self, seq):
               for item in seq:
                   self.write(item)
       
    1:     def close(self):
               self.closed = True
       
    1:     def flush(self):
               if self.closed:
                   raise ValueError("I/O operation on closed file")
       
    1:     def isatty(self):
               if self.closed:
                   raise ValueError("I/O operation on closed file")
               return False
       
    1:     def tell(self):
               self.response._ensure_sequence()
               return sum(map(len, self.response.response))
       
    1:     @property
           def encoding(self):
               return self.response.charset
       
       
    2: class ResponseStreamMixin(object):
           """Mixin for :class:`BaseResponse` subclasses.  Classes that inherit from
           this mixin will automatically get a :attr:`stream` property that provides
           a write-only interface to the response iterable.
    1:     """
       
    1:     @cached_property
           def stream(self):
               """The response iterable as write-only stream."""
               return ResponseStream(self)
       
       
    2: class Response(
    1:     BaseResponse,
    1:     ETagResponseMixin,
    1:     WWWAuthenticateMixin,
    1:     CORSResponseMixin,
    1:     ResponseStreamMixin,
    1:     CommonResponseDescriptorsMixin,
       ):
           """Full featured response object implementing the following mixins:
       
           -   :class:`ETagResponseMixin` for etag and cache control handling
           -   :class:`WWWAuthenticateMixin` for HTTP authentication support
           -   :class:`~werkzeug.wrappers.cors.CORSResponseMixin` for Cross
               Origin Resource Sharing headers
           -   :class:`ResponseStreamMixin` to add support for the ``stream``
               property
           -   :class:`CommonResponseDescriptorsMixin` for various HTTP
               descriptors
    1:     """
