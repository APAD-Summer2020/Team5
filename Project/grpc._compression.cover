       # Copyright 2019 The gRPC authors.
       #
       # Licensed under the Apache License, Version 2.0 (the "License");
       # you may not use this file except in compliance with the License.
       # You may obtain a copy of the License at
       #
       #     http://www.apache.org/licenses/LICENSE-2.0
       #
       # Unless required by applicable law or agreed to in writing, software
       # distributed under the License is distributed on an "AS IS" BASIS,
       # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       # See the License for the specific language governing permissions and
       # limitations under the License.
       
    1: from grpc._cython import cygrpc
       
    1: NoCompression = cygrpc.CompressionAlgorithm.none
    1: Deflate = cygrpc.CompressionAlgorithm.deflate
    1: Gzip = cygrpc.CompressionAlgorithm.gzip
       
       _METADATA_STRING_MAPPING = {
    1:     NoCompression: 'identity',
    1:     Deflate: 'deflate',
    1:     Gzip: 'gzip',
       }
       
       
    1: def _compression_algorithm_to_metadata_value(compression):
           return _METADATA_STRING_MAPPING[compression]
       
       
    1: def compression_algorithm_to_metadata(compression):
           return (cygrpc.GRPC_COMPRESSION_REQUEST_ALGORITHM_MD_KEY,
                   _compression_algorithm_to_metadata_value(compression))
       
       
    1: def create_channel_option(compression):
           return ((cygrpc.GRPC_COMPRESSION_CHANNEL_DEFAULT_ALGORITHM,
    1:              int(compression)),) if compression else ()
       
       
    1: def augment_metadata(metadata, compression):
    2:     if not metadata and not compression:
               return None
    2:     base_metadata = tuple(metadata) if metadata else ()
           compression_metadata = (
    2:         compression_algorithm_to_metadata(compression),) if compression else ()
    2:     return base_metadata + compression_metadata
       
       
       __all__ = (
    1:     "NoCompression",
           "Deflate",
           "Gzip",
       )
