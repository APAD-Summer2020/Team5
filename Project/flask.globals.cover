       # -*- coding: utf-8 -*-
       """
           flask.globals
           ~~~~~~~~~~~~~
       
           Defines all the global objects that are proxies to the current
           active context.
       
           :copyright: 2010 Pallets
           :license: BSD-3-Clause
    1: """
    1: from functools import partial
       
    1: from werkzeug.local import LocalProxy
    1: from werkzeug.local import LocalStack
       
       
       _request_ctx_err_msg = """\
       Working outside of request context.
       
       This typically means that you attempted to use functionality that needed
       an active HTTP request.  Consult the documentation on testing for
       information about how to avoid this problem.\
    1: """
       _app_ctx_err_msg = """\
       Working outside of application context.
       
       This typically means that you attempted to use functionality that needed
       to interface with the current application object in some way. To solve
       this, set up an application context with app.app_context().  See the
       documentation for more information.\
    1: """
       
       
    1: def _lookup_req_object(name):
           top = _request_ctx_stack.top
           if top is None:
               raise RuntimeError(_request_ctx_err_msg)
           return getattr(top, name)
       
       
    1: def _lookup_app_object(name):
           top = _app_ctx_stack.top
           if top is None:
               raise RuntimeError(_app_ctx_err_msg)
           return getattr(top, name)
       
       
    1: def _find_app():
           top = _app_ctx_stack.top
           if top is None:
               raise RuntimeError(_app_ctx_err_msg)
           return top.app
       
       
       # context locals
    1: _request_ctx_stack = LocalStack()
    1: _app_ctx_stack = LocalStack()
    1: current_app = LocalProxy(_find_app)
    1: request = LocalProxy(partial(_lookup_req_object, "request"))
    1: session = LocalProxy(partial(_lookup_req_object, "session"))
    1: g = LocalProxy(partial(_lookup_app_object, "g"))
