       # -*- coding: utf-8 -*-
       """
           flask
           ~~~~~
       
           A microframework based on Werkzeug.  It's extensively documented
           and follows best practice patterns.
       
           :copyright: 2010 Pallets
           :license: BSD-3-Clause
    1: """
       # utilities we import from Werkzeug and Jinja2 that are unused
       # in the module but are exported as public interface.
    1: from jinja2 import escape
    1: from jinja2 import Markup
    1: from werkzeug.exceptions import abort
    1: from werkzeug.utils import redirect
       
    1: from . import json
    1: from ._compat import json_available
    1: from .app import Flask
    1: from .app import Request
    1: from .app import Response
    1: from .blueprints import Blueprint
    1: from .config import Config
    1: from .ctx import after_this_request
    1: from .ctx import copy_current_request_context
    1: from .ctx import has_app_context
    1: from .ctx import has_request_context
    1: from .globals import _app_ctx_stack
    1: from .globals import _request_ctx_stack
    1: from .globals import current_app
    1: from .globals import g
    1: from .globals import request
    1: from .globals import session
    1: from .helpers import flash
    1: from .helpers import get_flashed_messages
    1: from .helpers import get_template_attribute
    1: from .helpers import make_response
    1: from .helpers import safe_join
    1: from .helpers import send_file
    1: from .helpers import send_from_directory
    1: from .helpers import stream_with_context
    1: from .helpers import url_for
    1: from .json import jsonify
    1: from .signals import appcontext_popped
    1: from .signals import appcontext_pushed
    1: from .signals import appcontext_tearing_down
    1: from .signals import before_render_template
    1: from .signals import got_request_exception
    1: from .signals import message_flashed
    1: from .signals import request_finished
    1: from .signals import request_started
    1: from .signals import request_tearing_down
    1: from .signals import signals_available
    1: from .signals import template_rendered
    1: from .templating import render_template
    1: from .templating import render_template_string
       
    1: __version__ = "1.1.1"
